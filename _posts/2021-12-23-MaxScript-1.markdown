---
layout:     post
title:      "MaxScripts开发环境"
subtitle:   ""
date:       2021-12-23 12:00:00
author:     "Lzz"
header-img: "img/post-bg-nextgen-web-pwa.jpg"
header-mask: 0.3
catalog:    true
tags:
    - MaxScripts
---



## 开发环境配置流程



## 开发环境配置流程

- 下载GitHub的MXSPyComRelease包,[链接](https://github.com/techartorg/MXSPyCOM/releases)
- 解压，并将安装包内的`MXSPyCOM.exe`文件复制到自定义目录，这个目录之后要用
- `initialize_COM_server.ms`脚本放到max对应版本的startup目录中，默认路径是`%localappdata%\autodesk\3dsmax\scripts\startup`



## VSCode

- 下载LanguageMaxScript插件

- 设置工作区, 其实就是在VSCode的 File -> Open Folder 

- 创建/配置***task.json***,可以***ctrl+e***搜索框中输入`>task`搜索到`Configure Default Build Task`,(这里的菜单是 Terminal -> Configure Default Build Task )

- 在文件内设置如下代码

  ```
  {
      "version": "2.0.0",
      "tasks": [
          {
              "label": "Execute in Max",
              "type": "process",
              "command": "C:/MXSPyCOM.exe",  //MXSPyCom.exe的路径
              "args": ["-f", "${file}"],
              "presentation": {
                "reveal": "always",
                "panel": "new"
            }
          }
      ]
    }
  ```

  

- 更改快捷键配置,方便调试， ( Ctrl + e, 输入 >keyboard )

  ```
  [
      {
          "key": "ctrl+e",
          "command": "workbench.action.tasks.runTask",
          "args": "Execute in Max"      //对应任务的名称   
      },
      {
          "key": "shift+e",
          "command": "workbench.action.quickOpen"  //原来的ctrl+e功能
      },
      {
          "key": "shift+e",
          "command": "workbench.action.quickOpenNavigateNextInFilePicker",
          "when": "inFilesPicker && inQuickOpen"
      }
  ]
  ```



## 测试脚本

- 在工作目录创建后缀为 ms格式的脚本文件

- 启动max

- 复制如下代码到脚本文件内，按 ctrl+e 调试

  ```
  rollout rename_rollout "Enter New Base Name"
      (
          edittext base_name ""
          button rename_them "RENAME"
          On rename_them pressed do 
          (
              if base_name.text!="" do (
                  for i in selection do i.name=uniqueName base_name.text
              ) 
          ) 
      )
      CreateDialog rename_rollout 250 50
  ```

  

## Max MacroRecorder

- 打开了Max之后，在MaxScript Listener 窗口上，定位到 Marcorecorder 菜单，可以直接打开这个功能，每一个命令就可以显示出来, 方便api
